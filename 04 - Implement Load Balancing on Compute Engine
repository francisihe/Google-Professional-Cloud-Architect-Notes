LAB 1: Creating a Virtual Machine

You can create virtual machines using 
a. The Cloud Shell, from the Cloud console
b. Using the gcloud command

a. Using the Cloud Shell:
In Cloud Shell, you click on Compute Engine - VM Instances, click 'Create Instance', fill in the parameters and hit create. You can SSH into it as well.

You then install the NGINX web server
1. Update the OS using 'sudo apt-get update'
2. Install NGINX using 'sudo apt-get install -y nginx'
3. Confirm that NGINX is running using 'ps auwx | grep nginx'
4. Click on the external IP to see the default page in a new browser

b. Using gclound command

1. You use the command:
gcloud compute instances create $NAME --machine-type e2-medium --zone=$ZONE
Sample output:

     Created [...gcelab2].
     NAME: gcelab2
     ZONE:  Zone
     MACHINE_TYPE: e2-medium
     PREEMPTIBLE:
     INTERNAL_IP: 10.128.0.3
     EXTERNAL_IP: 34.136.51.150
     STATUS: RUNNING

2. To see the defaults run: 'gcloud compute instances create --help'

===================

LAB 2: Getting Started with Cloud Shell and gcloud

1. Command to set the region: 'gcloud config set compute/region REGION'
2. Command to view the region setting: 'gcloud config get-value compute/region'
3. Command to set the zone: 'gcloud config set compute/zone ZONE'
4. Command to view project zone setting: 'gcloud config get-value compute/zone'
5. Command to view project id: 'gcloud config get-value project'
6. Command to view details of the project in 5 above: 'gcloud compute project-info describe --project $(gcloud config get-value project)'
7. Setting env variable to store project ID: export PROJECT_ID=$(gcloud config get-value project)
8. Setting env variable to store Zone: export ZONE=$(gcloud config get-value compute/zone)
9. View the set variables: echo -e "PROJECT ID: $PROJECT_ID\nZONE: $ZONE"

++ Creating the VM machine: 'gcloud compute instances create gcelab2 --machine-type e2-medium --zone $ZONE'

Other gcloud commands:
1. For help: 'gcloud -h' or 'gcloud config --help' or 'gcloud help config'
2. View the list of configurations: 'gcloud config list'
3. See all properties and their settings: 'gcloud config list --all'
4. List all components: 'gcloud components list'

++ Filtering command-line output
1. List the compute instance available in the project: 'gcloud compute instances list'
2. List the gcelab2 VM that I created prior: gcloud compute instances list --filter="name=('gcelab2')"
3. List the firewall rules in the project: gcloud compute firewall-rules list
4. List the firewall rules for the default network: gcloud compute firewall-rules list --filter="network='default'"
5. List the firewall rules for the default network where the allow rule matches an ICMP rule: gcloud compute firewall-rules list --filter="NETWORK:'default' AND ALLOW:'icmp'"

++ Connecting to your VM instance
1. To connect to your VM with SSH, run the following command: gcloud compute ssh gcelab2 --zone $ZONE
2. You can leave the passphrases empty. When the prompt now says something similar to sa_107021519685252337470@gcelab2, it confirms you have SSH'd into it. The reference before the @ indicates the account being used.
After the @ sign indicates the host machine being accessed.
3. You can then install the nginx web server: sudo apt install -y nginx
4. To quit: exit

++ Updating the firewall
1. List the firewall rules for the project: gcloud compute firewall-rules list
2. Try to access the nginx service running on the gcelab2 virtual machine.

Note: Communication with the virtual machine will fail as it does not have an appropriate firewall rule. The nginx web server is expecting to communicate on tcp:80. To get communication working you need to:

Add a tag to the gcelab2 virtual machine
Add a firewall rule for http traffic

3. Add a tag to the virtual machine: gcloud compute instances add-tags gcelab2 --tags http-server,https-server
4. Update the firewall rule to allow: gcloud compute firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server
5. List the firewall rules for the project: gcloud compute firewall-rules list --filter=ALLOW:'80'
6. Verify communication is possible for http to the virtual machine: curl http://$(gcloud compute instances list --filter=name:gcelab2 --format='value(EXTERNAL_IP)')


++ Viewing the system logs
1. View the available logs on the system: gcloud logging logs list
2. View the logs that relate to compute resources: gcloud logging logs list --filter="compute"
3. Read the logs related to the resource type of gce_instance: gcloud logging read "resource.type=gce_instance" --limit 5
4. Read the logs for a specific virtual machine: gcloud logging read "resource.type=gce_instance AND labels.instance_name='gcelab2'" --limit 5


===============================

